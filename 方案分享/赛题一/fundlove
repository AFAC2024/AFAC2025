[init_env.sh](https://github.com/user-attachments/files/22462066/init_env.sh)
#!/bin/bash
set -e

# 国内镜像源设置 (豆瓣源和清华源)
PYPI_MIRROR="https://pypi.doubanio.com/simple/"
TORCH_MIRROR="https://pypi.tuna.tsinghua.edu.cn/simple"

# 初始化环境脚本
echo "===== 开始初始化运行环境 (使用国内镜像源) ====="

# 1. 检查并创建虚拟环境
if [ ! -d "venv" ]; then
    echo "创建虚拟环境..."
    python3 -m venv venv
else
    echo "虚拟环境已存在，跳过创建"
fi

# 2. 激活虚拟环境
echo "激活虚拟环境..."
if [ "$(uname)" = "Darwin" ]; then
    # macOS
    source venv/bin/activate
else
    # Linux
    source venv/bin/activate
fi

# 3. 升级pip并配置镜像源
echo "升级pip并配置国内镜像源..."
pip install --upgrade pip -i $PYPI_MIRROR
pip config set global.index-url $PYPI_MIRROR

# 4. 安装基础依赖
echo "安装基础依赖..."
pip install pandas  scikit-learn
pip install "numpy<2.0" -i https://pypi.doubanio.com/simple/

# 5. 安装深度学习依赖 (使用清华源加速PyTorch相关包)
echo "安装深度学习依赖..."
pip install torch torchvision torchaudio -i $TORCH_MIRROR

# 6. 安装爬虫依赖
echo "安装爬虫依赖..."
pip install selenium webdriver-manager fake_useragent

# 7. 安装数据处理与可视化依赖
echo "安装数据处理与可视化依赖..."
pip install matplotlib requests

# 8. 安装其他可能需要的依赖
echo "安装其他依赖..."
pip install openai python-dotenv

# 9. 检查Chrome浏览器是否安装（针对爬虫脚本）
if ! command -v google-chrome &> /dev/null && ! command -v chromium-browser &> /dev/null; then
    echo "警告：未检测到Chrome浏览器，可能影响爬虫功能"
    echo "请手动安装Chrome或Chromium浏览器"
fi

# 10. 权限设置
echo "设置脚本执行权限..."
# 使用当前工作目录作为目标目录
TARGET_DIR=$(pwd)

# 检查目录是否存在（理论上当前目录一定存在，这里做双重保障）
if [ -d "$TARGET_DIR" ]; then
    # 授予该目录下所有文件读、写、执行权限
    # 对文件设置644权限（所有者读写，其他读）
    find "$TARGET_DIR" -type f -exec chmod 644 {} \;
    # 对Python脚本设置755权限（所有人可执行）
    find "$TARGET_DIR" -name "*.py" -type f -exec chmod 755 {} \;
    # 对目录设置755权限（所有人可进入）
    find "$TARGET_DIR" -type d -exec chmod 755 {} \;
    echo "已成功设置当前目录($TARGET_DIR)下所有文件的访问、修改和运行权限"
else
    echo "警告：当前目录($TARGET_DIR)不存在，无法设置权限"
fi

# 完成提示
echo "===== 环境初始化完成 ====="
echo "请使用以下命令激活虚拟环境："
echo "source venv/bin/activate"
echo "运行主程序："
echo "python train/main.py"
echo "运行数据集构造："
echo "python 数据集构建过程/数据集构造.py"

